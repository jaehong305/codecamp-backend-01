# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  name: String!
  phone: String!
  personal: String!
  address: String!
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MainCategory {
  id: String!
  name: String!
}

type CatDetail {
  id: String!
  history: String!
}

type Cat {
  id: String!
  name: String!
  intro: String!
  products: [Product!]!
  catDetail: CatDetail!
}

type Product {
  id: String!
  name: String!
  description: String!
  price: Int!
  isWet: Boolean!
  quantity: Int!
  deletedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  mainCategory: MainCategory!
  subCategorys: [SubCategory!]!
  cats: [Cat!]!
}

type SubCategory {
  id: String!
  name: String!
  products: [Product!]!
}

type Order {
  id: String!
  count: Int!
  sum: Int!
  address: String!
  product: Product!
  user: User!
}

type Payment {
  id: String!
  impUid: String!
  amount: Int!
  status: PAYMENT_STATUS_ENUM!
  order: Order!
  createdAt: DateTime!
}

enum PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type ProductImage {
  id: String!
  url: String!
  isMain: Boolean!
  product: Product!
}

type Query {
  fetchMainCategorys: [MainCategory!]!
  fetchMainCategory(mainCategoryId: String!): MainCategory!
  fetchProducts(search: String!): [Product!]!
  fetchProductsAll: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchSubCategorys: [SubCategory!]!
  fetchSubCategory(subCategoryId: String!): SubCategory!
  fetchUsers: [User!]!
  fetchUsersAll: [User!]!
  fetchUser: User!
}

type Mutation {
  login(password: String!, userId: String!): String!
  restoreAccessToken: String!
  logout: String!
  uploadFile(files: [Upload!]!): [String!]!
  createMainCategory(name: String!): MainCategory!
  updateMainCategory(updateName: String!, mainCategoryId: String!): String!
  deleteMainCategory(mainCategoryId: String!): Boolean!
  createOrder(createOrderInput: CreateOrderInput!): Order!
  createPayment(orderId: String!, amount: Float!, impUid: String!): Payment!
  cancelPayment(impUid: String!, orderId: String!): Payment!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!, productId: String!): Product!
  deleteProduct(productId: String!): Boolean!
  restoreProduct(productId: String!): Boolean!
  createProductImage(createProductImageInput: CreateProductImageInput!): [ProductImage!]!
  updateProductImage(createProductImageInput: CreateProductImageInput!): [ProductImage!]!
  createSubCategory(name: String!): SubCategory!
  updateSubCategory(updateName: String!, subCategoryId: String!): String!
  deleteSubCategory(subCategoryId: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser: Boolean!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateOrderInput {
  count: Int!
  address: String!
  productId: String!
  userId: String!
}

input CreateProductInput {
  name: String!
  description: String!
  price: Int!
  quantity: Int!
  isWet: Boolean!
  mainCategoryId: String!
  subCategoryId: [String!]!
}

input UpdateProductInput {
  name: String
  description: String
  price: Int
  quantity: Int
  isWet: Boolean
}

input CreateProductImageInput {
  urls: [String!]!
  isMains: [Boolean!]!
  productId: String!
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
  phone: String!
  personal: String!
  address: String!
}

input UpdateUserInput {
  email: String
  password: String!
  phone: String
  personal: String
  address: String
}
